{"version":3,"sources":["services/getDataFromApi.js.js","components/Characters/CharacterCard.js","components/Characters/CharacterNotFound.js","components/Characters/CharacterList.js","components/Loader.js","components/Footer.js","components/Characters/CharacterDetail.js","components/Characters/CharacterNoResults.js","components/Filters/FilterByName.js","components/Filters/FilterByGender.js","components/Filters/FilterBySpecie.js","components/Filters/FilterByStatus.js","components/Filters/FilterSortByName.js","components/Filters/Filters.js","images/header-rick-square.png","components/Header.js","components/App.js","index.js"],"names":["getDataFromApi","page","fetch","then","response","json","data","results","map","character","id","name","gender","species","image","status","origin","episodes","episode","CharacterCard","props","to","className","src","alt","title","CharacterNotFound","nameFilter","CharacterList","characters","isLoading","length","filterName","Loader","Footer","CharacterDetail","undefined","console","log","CharacterNoResults","FilterByName","htmlFor","type","placeholder","onChange","ev","handleFilter","value","target","key","FilterByGender","genderFilter","FilterBySpecie","specieFilter","FilterByStatus","handleChange","checked","statusElement","index","statusFilter","includes","FilterSortByName","sortByName","Filters","onSubmit","event","preventDefault","handleReset","onClick","Header","logo","App","useState","setCharacters","setNameFilter","setGenderFilter","setSpecieFilter","setStatusFilter","setIsLoading","setSortByName","useEffect","filteredCharacters","filter","toUpperCase","sort","a","b","exact","path","indexStatus","indexOf","newStatusFilter","splice","Set","render","foundCharacter","find","parseInt","match","params","ReactDOM","document","getElementById"],"mappings":"iXAqBeA,EArBQ,SAACC,GACpB,OAAOC,MACH,qDAECC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACH,OAAOA,EAAKC,QAAQC,KAAI,SAACC,GACrB,MAAO,CACHC,GAAID,EAAUC,GACdC,KAAMF,EAAUE,KAChBC,OAAQH,EAAUG,OAClBC,QAASJ,EAAUI,QACnBC,MAAOL,EAAUK,MACjBC,OAAQN,EAAUM,OAClBC,OAAQP,EAAUO,OAAOL,KACzBM,SAAUR,EAAUS,gB,eCqBzBC,EA9BO,SAACC,GASnB,OACI,mCACI,cAAC,IAAD,CAAMC,GAAE,qBAAgBD,EAAMX,UAAUC,IAAxC,SACI,0BAASY,UAAU,OAAnB,UACI,qBACIC,IAAKH,EAAMX,UAAUK,MACrBU,IAAK,cAAgBJ,EAAMX,UAAUE,KACrCc,MAAO,cAAgBL,EAAMX,UAAUE,KACvCW,UAAU,gBAEd,oBAAIA,UAAU,aAAd,SAA4BF,EAAMX,UAAUE,OAC5C,mBAAGW,UAAU,gBAAb,SAA8BF,EAAMX,UAAUI,UAC9C,sBAAMS,UAAU,sBAAhB,SAnBoB,UAA5BF,EAAMX,UAAUI,QACT,eAEA,0BCYJa,G,MAjBW,SAACN,GACvB,OACI,sBAAKE,UAAU,qBAAf,UACI,mBAAGA,UAAU,2BAAb,mEACA,sBAAMA,UAAU,mCAAhB,SACKF,EAAMO,aAEX,mBAAGL,UAAU,8BAAb,uBACA,qBACIC,IAAI,4DACJC,IAAI,gBACJF,UAAU,iCCQXM,EApBO,SAAAR,GAClB,IAAMX,EAAYW,EAAMS,WAAWrB,KAAI,SAAAC,GACnC,OACI,oBAAuBa,UAAU,wBAAjC,SACI,cAAC,EAAD,CAAeb,UAAWA,KADrBA,EAAUC,OAM3B,OAAKU,EAAMU,WAAkC,IAArBrB,EAAUsB,OAI1B,yBAAST,UAAU,gBAAnB,SACI,oBAAIA,UAAU,kBAAd,SAAiCb,MAJlC,cAAC,EAAD,CAAmBkB,WAAYP,EAAMY,cCRrCC,G,MANA,WACX,OACI,mBAAGX,UAAU,UAAb,0BCaOY,G,MAZA,WACX,OACI,yBAAQZ,UAAU,SAAlB,UACI,uBAAOA,UAAU,uBAAjB,6CACA,qBAAKA,UAAU,eAAeC,IAAI,uDAAuDC,IAAI,WAC7F,uBAAOF,UAAU,wBAAjB,gCCuDGa,EAzDS,SAACf,GACrB,OAAIA,EAAMU,gBAAiCM,IAApBhB,EAAMX,UAClB,cAAC,EAAD,KAEX4B,QAAQC,IAAIlB,GAER,qCACI,+BACI,0BAASE,UAAU,cAAnB,UACI,eAAC,IAAD,CAAMD,GAAG,IAAII,MAAM,eAAeH,UAAU,yBAA5C,UACK,IADL,gBAEF,sBAAMA,UAAU,iDAEd,8BACI,qBACIC,IAAKH,EAAMX,UAAUK,MACrBU,IAAK,cAAgBJ,EAAMX,UAAUE,KACrCc,MAAO,cAAgBL,EAAMX,UAAUE,KACvCW,UAAU,uBAGlB,oBAAIA,UAAU,oBAAd,SAAmCF,EAAMX,UAAUE,OACnD,+BACI,qBAAIW,UAAU,oBAAd,UACI,6CAAyB,IACzB,uBAAMA,UAAU,qBAAhB,UACK,IACAF,EAAMX,UAAUM,OAFrB,KAE8B,mBAAGO,UAAS,wBAA8C,SAA3BF,EAAMX,UAAUM,OAAoB,OAAoC,UAA3BK,EAAMX,UAAUM,OAAqB,QAAU,YAG7J,qBAAIO,UAAU,oBAAd,UACI,8CAA0B,IAC1B,uBAAMA,UAAU,qBAAhB,UACKF,EAAMX,UAAUI,QAAS,IAD9B,KACgE,UAA5BO,EAAMX,UAAUI,SAA2BO,EAAMX,UAAUI,QAArB,UAG9E,qBAAIS,UAAU,oBAAd,UACI,6CAAyB,IACzB,uBAAMA,UAAU,qBAAhB,UACK,IACAF,EAAMX,UAAUO,aAGzB,qBAAIM,UAAU,oBAAd,UACI,+CAA2B,IAC3B,sBAAMA,UAAU,qBAAhB,SACKF,EAAMX,UAAUQ,SAASc,oBAM9C,cAAC,EAAD,SC3CGQ,EAZY,SAACnB,GACxB,OACI,sBAAKE,UAAU,qBAAf,UACI,mBAAGA,UAAU,2BAAb,6HACA,cAAC,IAAD,CAAMD,GAAG,IAAIC,UAAU,eAAvB,yBACA,qBACIC,IAAI,4DACJC,IAAI,gBACJF,UAAU,gCCaXkB,EAvBM,SAAApB,GAQjB,OACI,sBAAKE,UAAU,wBAAf,UACI,uBAAOmB,QAAQ,YAAYnB,UAAU,sBAArC,oBACA,uBAAOoB,KAAK,OACRhC,GAAG,YACHC,KAAK,YACLgC,YAAY,iCACZrB,UAAU,sBACVsB,SAfS,SAACC,GAClBzB,EAAM0B,aAAa,CACfC,MAAOF,EAAGG,OAAOD,MACjBE,IAAK,UAaDF,MAAO3B,EAAMO,iBCSduB,EA1BQ,SAAA9B,GAOnB,OACI,sBAAKE,UAAU,wBAAf,UACI,uBAAOmB,QAAQ,SAASnB,UAAU,sBAAlC,qBACA,yBACIZ,GAAG,SACHC,KAAK,SACLiC,SAZS,SAACC,GAClBzB,EAAM0B,aAAa,CACfC,MAAOF,EAAGG,OAAOD,MACjBE,IAAK,YAUD3B,UAAU,uBACVyB,MAAO3B,EAAM+B,aALjB,UAQI,wBAAQJ,MAAM,MAAMzB,UAAU,uBAA9B,iBACA,wBAAQyB,MAAM,SAASzB,UAAU,uBAAjC,oBACA,wBAAQyB,MAAM,OAAOzB,UAAU,uBAA/B,yBCQD8B,EA5BQ,SAAAhC,GAOnB,OACI,mCACI,sBAAKE,UAAU,wBAAf,UACI,uBAAOmB,QAAQ,SAASnB,UAAU,sBAAlC,oBACA,yBACIZ,GAAG,SACHC,KAAK,SACLiC,SAbK,SAACC,GAClBzB,EAAM0B,aAAa,CACfC,MAAOF,EAAGG,OAAOD,MACjBE,IAAK,YAWG3B,UAAU,uBACVyB,MAAO3B,EAAMiC,aALjB,UAQI,wBAAQN,MAAM,MAAMzB,UAAU,uBAA9B,iBACA,wBAAQyB,MAAM,QAAQzB,UAAU,uBAAhC,mBACA,wBAAQyB,MAAM,QAAQzB,UAAU,uBAAhC,4BCeLgC,EAtCQ,SAAAlC,GACnB,IAAMmC,EAAe,SAAAV,GACjBzB,EAAM0B,aAAa,CACfC,MAAOF,EAAGG,OAAOD,MACjBE,IAAK,SACLO,QAASX,EAAGG,OAAOQ,WAIrBC,EAAgBrC,EAAML,OAAOP,KAAI,SAACO,EAAQ2C,GAC5C,OACI,mCACI,wBAAoBpC,UAAU,kBAA9B,UACI,uBACIoB,KAAK,WACL/B,KAAK,SACLoC,MAAOhC,EACP6B,SAAUW,EACVjC,UAAU,8BACVkC,QAASpC,EAAMuC,aAAaC,SAAS7C,KAExCA,IATQ2C,QAczB,OACI,mCACI,sBAAKpC,UAAU,6BAAf,UACI,uBAAOA,UAAU,yBAAyBmB,QAAQ,SAAlD,qBAGCgB,QCJFI,G,MA1BU,SAACzC,GAOtB,OACI,mCACI,sBAAKE,UAAU,mCAAf,UACI,uBAAOA,UAAU,qBAAqBmB,QAAQ,aAA9C,0BAGA,uBACInB,UAAU,eACVX,KAAK,OACL+B,KAAK,WACLhC,GAAG,OACH8C,QAASpC,EAAM0C,WACflB,SAlBM,SAACC,GACnBzB,EAAM0B,aAAa,CACfU,QAASX,EAAGG,OAAOQ,QACnBP,IAAK,yBC0CFc,EAtCC,SAAC3C,GAKb,OACI,yBAASE,UAAU,eAAnB,SACI,uBAAMA,UAAU,0BAA0B0C,SAN7B,SAACC,GAClBA,EAAMC,kBAKF,UACI,cAAC,EAAD,CACIpB,aAAc1B,EAAM0B,aACpBnB,WAAYP,EAAMO,WAClBwC,YAAa/C,EAAM+C,cACvB,cAAC,EAAD,CACIrB,aAAc1B,EAAM0B,aACpBK,aAAc/B,EAAM+B,aACpBgB,YAAa/C,EAAM+C,cACvB,cAAC,EAAD,CACIrB,aAAc1B,EAAM0B,aACpBO,aAAcjC,EAAMiC,aACpBc,YAAa/C,EAAM+C,cACvB,cAAC,EAAD,CACIrB,aAAc1B,EAAM0B,aACpB/B,OAAQK,EAAML,OACd4C,aAAcvC,EAAMuC,aACpBQ,YAAa/C,EAAM+C,cACvB,cAAC,EAAD,CACIrB,aAAc1B,EAAM0B,aACpBgB,WAAY1C,EAAM0C,WAClBK,YAAa/C,EAAM+C,cAEvB,yBAAQ7C,UAAU,WAAW8C,QAAShD,EAAM+C,YAA5C,UACI,mBAAG7C,UAAU,qBADjB,0BCxCD,MAA0B,+CCwB1B+C,G,MAjBA,WACX,OACI,mCACI,wBAAQ/C,UAAU,SAAlB,SACI,8BACI,cAAC,IAAD,CAAMD,GAAG,IAAIC,UAAU,eAAvB,SACI,qBAAKC,IAAK+C,EAAM9C,IAAI,gCAChBC,MAAM,gCACNH,UAAU,4BCuIvBiD,EAzIH,WAAO,IAAD,EACsBC,mBAAS,IAD/B,mBACP3C,EADO,KACK4C,EADL,OAEsBD,mBAAS,IAF/B,mBAEP7C,EAFO,KAEK+C,EAFL,OAG0BF,mBAAS,OAHnC,mBAGPrB,EAHO,KAGOwB,EAHP,OAI0BH,mBAAS,OAJnC,mBAIPnB,EAJO,KAIOuB,EAJP,OAK0BJ,mBAAS,IALnC,mBAKPb,EALO,KAKOkB,EALP,OAMoBL,oBAAS,GAN7B,mBAMP1C,EANO,KAMIgD,EANJ,OAOsBN,oBAAS,GAP/B,mBAOPV,EAPO,KAOKiB,EAPL,KAUdC,qBAAU,WACNhF,IAAiBG,MAAK,SAAAG,GAAI,OAAImE,EAAcnE,MACvCH,MAAK,kBAAM2E,GAAa,QAC9B,IAIH,IAiCMG,EAAqBpD,EACtBqD,QAAO,SAAAzE,GACJ,OAAOA,EAAUE,KAAKwE,cAAcvB,SAASjC,EAAWwD,kBAE3DD,QAAO,SAAAzE,GACJ,MAAqB,QAAjB0C,GAGO1C,EAAUG,SAAWuC,KAGnC+B,QAAO,SAAAzE,GACJ,MAAqB,QAAjB4C,GAGO5C,EAAUI,UAAYwC,KAGpC6B,QAAO,SAAAzE,GACJ,OAA4B,IAAxBkD,EAAa5B,QAGN4B,EAAaC,SAASnD,EAAUM,WAG/C+C,GACAmB,EAAmBG,MAAK,SAACC,EAAGC,GACxB,OAAID,EAAE1E,KAAO2E,EAAE3E,KACJ,EAEP0E,EAAE1E,KAAO2E,EAAE3E,MACH,EAELsE,KAIf,IAAmBhC,EAuBnB,OACI,mCACI,qBAAK3B,UAAU,MAAf,SACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAOiE,OAAK,EAACC,KAAK,IAAlB,UACI,cAAC,EAAD,IACA,uBAAMlE,UAAU,OAAhB,UACI,cAAC,EAAD,CAASwB,aApGZ,SAAAxC,GAEjB,GADA+B,QAAQC,IAAIhC,GACK,SAAbA,EAAK2C,IACLyB,EAAcpE,EAAKyC,YAChB,GAAiB,WAAbzC,EAAK2C,IACZ0B,EAAgBrE,EAAKyC,YAClB,GAAiB,WAAbzC,EAAK2C,IACZ2B,EAAgBtE,EAAKyC,YAClB,GAAiB,eAAbzC,EAAK2C,IACZ8B,EAAczE,EAAKkD,cAChB,GAAiB,WAAblD,EAAK2C,IAAkB,CAC9B,IAAMwC,EAAc9B,EAAa+B,QAAQpF,EAAKyC,OAC9C,IAAqB,IAAjB0C,EAAoB,CACpB,IAAME,EAAe,sBAAOhC,GAAP,CAAqBrD,EAAKyC,QAC/C8B,EAAgBc,OACb,CACH,IAAMA,EAAe,YAAOhC,GAC5BgC,EAAgBC,OAAOH,EAAa,GACpCZ,EAAgBc,MAmFAxB,YA7ER,WAChBO,EAAc,IACdC,EAAgB,OAChBC,EAAgB,OAChBC,EAAgB,IAChBE,GAAc,IAyEUpD,WAAYA,EACZwB,aAAcA,EACdE,aAAcA,EACdM,aAAcA,EACdG,WAAYA,EACZ/C,QArCTkC,EAqC2B,SApCnC,YAAI,IAAI4C,IAAIhE,EAAWrB,KAAI,SAACC,GAAD,OAAeA,EAAUwC,WAqCvC,cAAC,EAAD,CAAepB,WAAYoD,EAAoBjD,WAAYL,EAAYG,UAAWA,IACjFA,EAAY,cAAC,EAAD,IAAa,MAE9B,cAAC,EAAD,OAEJ,cAAC,IAAD,CAAO0D,KAAK,iBAAiBM,OAtCf,SAAC1E,GAC3B,IAAM2E,EAAiBlE,EAAWmE,MAAK,SAACvF,GACpC,OAAOA,EAAUC,KAAOuF,SAAS7E,EAAM8E,MAAMC,OAAOzF,OAExD,YAAuB0B,IAAnB2D,EAEI,qCACI,cAAC,EAAD,CAAiBtF,UAAWsF,EAAgBjE,UAAWA,IAD3D,OAKG,qCACH,cAAC,EAAD,IACA,cAAC,EAAD,kBC7GhBsE,IAASN,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFO,SAASC,eAAe,W","file":"static/js/main.e0bfad39.chunk.js","sourcesContent":["const getDataFromApi = (page) => {\n    return fetch(\n        'https://rickandmortyapi.com/api/character/?page=1'\n    )\n        .then((response) => response.json())\n        .then((data) => {\n            return data.results.map((character) => {\n                return {\n                    id: character.id,\n                    name: character.name,\n                    gender: character.gender,\n                    species: character.species,\n                    image: character.image,\n                    status: character.status,\n                    origin: character.origin.name,\n                    episodes: character.episode,\n                };\n            });\n        });\n};\n\nexport default getDataFromApi;\n","import React from \"react\"\nimport { Link } from \"react-router-dom\";\nimport \"../../stylesheets/layout/Cards.scss\";\nimport PropTypes from \"prop-types\";\n\n\nconst CharacterCard = (props) => {\n    const checkSpecies = () => {\n        if (props.character.species === 'Human') {\n            return \"🌍\";\n        } else {\n            return \"🪐 \";\n        }\n    };\n\n    return (\n        <>\n            <Link to={`/character/${props.character.id}`}>\n                <article className=\"card\">\n                    <img\n                        src={props.character.image}\n                        alt={\"Image from \" + props.character.name}\n                        title={\"Image from \" + props.character.name}\n                        className=\"card__image\"\n                    />\n                    <h2 className=\"card__name\">{props.character.name}</h2>\n                    <p className=\"card__species\">{props.character.species}</p>\n                    <span className=\"card__species--icon\">{checkSpecies()}</span>\n\n                </article>\n            </Link>\n        </>\n    )\n};\n\n\nexport default CharacterCard;\n\nCharacterCard.propTypes = {\n    id: PropTypes.number,\n    name: PropTypes.string,\n    species: PropTypes.string,\n    image: PropTypes.string,\n};","import React from \"react\";\nimport \"../../stylesheets/layout/NotFound.scss\";\nimport PropTypes from \"prop-types\";\n\n\n\nconst CharacterNotFound = (props) => {\n    return (\n        <div className=\"notFound-container\">\n            <p className=\"notFound-container__text\"> Sorry, there is no character that matches the search</p>\n            <span className=\"notFound-container__text--search\">\n                {props.nameFilter}\n            </span>\n            <p className=\"notFound-container__subtext\">Try again</p>\n            <img\n                src=\"https://media.giphy.com/media/l3vR4MzqOUKFXBcoo/giphy.gif\"\n                alt=\"Not Found gif\"\n                className=\"notFound-container__img\" />\n        </div>\n    );\n};\n\n\nexport default CharacterNotFound;\n\nCharacterNotFound.propTypes = {\n    nameFilter: PropTypes.string,\n};\n","import React from \"react\"\nimport CharacterCard from \"./CharacterCard\";\nimport CharacterNotFound from \"./CharacterNotFound\";\nimport PropTypes from \"prop-types\";\n\nconst CharacterList = props => {\n    const character = props.characters.map(character => {\n        return (\n            <li key={character.id} className=\"cards-container__item\">\n                <CharacterCard character={character} />\n            </li>\n        );\n    });\n\n    if (!props.isLoading && character.length === 0) {\n        return <CharacterNotFound nameFilter={props.filterName}></CharacterNotFound>\n    } else\n        return (\n            <section className=\"cards-section\">\n                <ul className=\"cards-container\">{character}</ul>\n            </section>\n        );\n};\n\n\nexport default CharacterList;\n\nCharacterList.propTypes = {\n    character: PropTypes.array,\n    id: PropTypes.number,\n    nameFilter: PropTypes.string,\n};","\nconst Loader = () => {\n    return (\n        <p className=\"loading\">Loading...</p>\n    )\n};\n\nexport default Loader;","import React from \"react\"\nimport \"../stylesheets/layout/Footer.scss\";\n\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer\">\n            <small className=\"footer__small--first\">Rick and Morty character search</small>\n            <img className=\"footer__icon\" src=\"https://media.giphy.com/media/8yhfcK3rAvMQ/giphy.gif\" alt=\"footer\" />\n            <small className=\"footer__small--second\">&copy; alcocere\n             </small>\n        </footer >\n    )\n};\n\n\nexport default Footer;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../../stylesheets/layout/CardDetail.scss\";\nimport PropTypes from \"prop-types\";\nimport Loader from \"../Loader\";\nimport Footer from \"../Footer\";\n\nconst CharacterDetail = (props) => {\n    if (props.isLoading && props.character === undefined) {\n        return <Loader />\n    }\n    console.log(props);\n    return (\n        <>\n            <main>\n                <article className='card-detail'>\n                    <Link to='/' title='Back to List' className='card-detail__modalText'>\n                        {\" \"}\n\t\t\t\t\tBack to List <span className='card-detail__modalClose icon fas fa-times'></span>\n                    </Link>\n                    <div>\n                        <img\n                            src={props.character.image}\n                            alt={\"Image from \" + props.character.name}\n                            title={\"Image from \" + props.character.name}\n                            className='card-detail__img'\n                        />\n                    </div>\n                    <h2 className='card-detail__name'>{props.character.name}</h2>\n                    <ul>\n                        <li className='card-detail__info'>\n                            <strong>Status:</strong>{\" \"}\n                            <span className='card-detail__info2'>\n                                {\" \"}\n                                {props.character.status}  <i className={`fas fa-circle ${props.character.status === 'Dead' ? 'dead' : props.character.status === 'Alive' ? 'alive' : ''}`} />\n                            </span>\n                        </li>\n                        <li className='card-detail__info'>\n                            <strong>Species:</strong>{\" \"}\n                            <span className='card-detail__info2'>\n                                {props.character.species}{\" \"} {props.character.species === 'Human' ? '' : props.character.species === 'Alien' ? '' : ''}\n                            </span>\n                        </li>\n                        <li className='card-detail__info'>\n                            <strong>Origin:</strong>{\" \"}\n                            <span className='card-detail__info2'>\n                                {\" \"}\n                                {props.character.origin}\n                            </span>\n                        </li>\n                        <li className='card-detail__info'>\n                            <strong>Episodes:</strong>{\" \"}\n                            <span className='card-detail__info2'>\n                                {props.character.episodes.length}\n                            </span>\n                        </li>\n                    </ul>\n                </article>\n            </main>\n            <Footer />\n        </>\n    );\n};\n\nexport default CharacterDetail;\nCharacterDetail.propTypes = {\n    image: PropTypes.string,\n    name: PropTypes.string,\n    status: PropTypes.string,\n    species: PropTypes.string,\n    origin: PropTypes.string,\n    episode: PropTypes.number,\n};","import React from \"react\";\nimport \"../../stylesheets/layout/NotFound.scss\";\nimport { Link } from \"react-router-dom\";\n\nconst CharacterNoResults = (props) => {\n    return (\n        <div className=\"notFound-container\">\n            <p className=\"notFound-container__text\"> Oooops 😵 sorry, there is no character in this universe that matches with your search! 🛸 </p>\n            <Link to=\"/\" className=\"header__link\"> Try again </Link>\n            <img\n                src=\"https://media.giphy.com/media/l3vR4MzqOUKFXBcoo/giphy.gif\"\n                alt=\"Not Found gif\"\n                className=\"notFound-container__img\" />\n        </div>\n    )\n}\nexport default CharacterNoResults;","import React from 'react';\n\nconst FilterByName = props => {\n    const handleChange = (ev) => {\n        props.handleFilter({\n            value: ev.target.value,\n            key: 'name'\n        });\n    };\n\n    return (\n        <div className=\"form-section__filters\">\n            <label htmlFor=\"character\" className=\"form-section__label\"> Name </label>\n            <input type=\"text\"\n                id=\"character\"\n                name=\"character\"\n                placeholder=\"Search your favorite character\"\n                className=\"form-section__input\"\n                onChange={handleChange}\n                value={props.nameFilter} />\n\n        </div>\n    );\n};\n\nexport default FilterByName;","import React from 'react';\n\nconst FilterByGender = props => {\n    const handleChange = (ev) => {\n        props.handleFilter({\n            value: ev.target.value,\n            key: 'gender'\n        });\n    };\n    return (\n        <div className=\"form-section__filters\">\n            <label htmlFor=\"gender\" className=\"form-section__label\"> Gender</label>\n            <select\n                id=\"gender\"\n                name=\"gender\"\n                onChange={handleChange}\n                className=\"form-section__select\"\n                value={props.genderFilter}\n            >\n\n                <option value=\"All\" className=\"form-section__option\">All</option>\n                <option value=\"Female\" className=\"form-section__option\">Female</option>\n                <option value=\"Male\" className=\"form-section__option\">Male</option>\n            </select>\n        </div>\n    )\n};\n\nexport default FilterByGender;","import React from 'react';\n\nconst FilterBySpecie = props => {\n    const handleChange = (ev) => {\n        props.handleFilter({\n            value: ev.target.value,\n            key: 'specie'\n        });\n    };\n    return (\n        <>\n            <div className=\"form-section__filters\">\n                <label htmlFor=\"specie\" className=\"form-section__label\">Specie</label>\n                <select\n                    id=\"specie\"\n                    name=\"specie\"\n                    onChange={handleChange}\n                    className=\"form-section__select\"\n                    value={props.specieFilter}\n                >\n\n                    <option value=\"All\" className=\"form-section__option\">All</option>\n                    <option value=\"Human\" className=\"form-section__option\">Human</option>\n                    <option value=\"Alien\" className=\"form-section__option\">Alien</option>\n                </select>\n            </div>\n        </>\n    )\n};\n\nexport default FilterBySpecie;","const FilterByStatus = props => {\n    const handleChange = ev => {\n        props.handleFilter({\n            value: ev.target.value,\n            key: 'status',\n            checked: ev.target.checked\n        });\n    };\n\n    const statusElement = props.status.map((status, index) => {\n        return (\n            <>\n                < label key={index} className=\"status-checkbox\" >\n                    <input\n                        type=\"checkbox\"\n                        name=\"status\"\n                        value={status}\n                        onChange={handleChange}\n                        className=\"status-checkbox__input hide\"\n                        checked={props.statusFilter.includes(status)}\n                    />\n                    {status}\n                </label >\n            </>\n        );\n    });\n    return (\n        <>\n            <div className=\"status-checkbox__container\">\n                <label className=\"status-checkbox__label\" htmlFor=\"status\">\n                    Status:\n                 </label>\n                {statusElement}\n            </div>\n        </>\n    );\n};\n\nexport default FilterByStatus;\n","import \"../../stylesheets/layout/Filters.scss\";\n\nconst FilterSortByName = (props) => {\n    const handleOnClick = (ev) => {\n        props.handleFilter({\n            checked: ev.target.checked,\n            key: 'sortByName'\n        });\n    };\n    return (\n        <>\n            <div className=\"form-section__filters sortByName\">\n                <label className='sortByName__filter' htmlFor='sortByName'>\n                    Sort by name\n                </label>\n                <input\n                    className='filter_input'\n                    name='sort'\n                    type='checkbox'\n                    id='sort'\n                    checked={props.sortByName}\n                    onChange={handleOnClick}\n                />\n\n            </div>\n        </>\n    )\n}\nexport default FilterSortByName;","import React from \"react\"\nimport FilterByName from \"./FilterByName\";\nimport FilterByGender from \"./FilterByGender\";\nimport FilterBySpecie from \"./FilterBySpecie\";\nimport FilterByStatus from \"./FilterByStatus\";\nimport FilterSortByName from \"./FilterSortByName\";\n\nimport \"../../stylesheets/layout/Filters.scss\";\nimport PropTypes from 'prop-types';\n\nconst Filters = (props) => {\n    const handleSubmit = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <section className=\"form-section\">\n            <form className=\"form-section__container\" onSubmit={handleSubmit}>\n                <FilterByName\n                    handleFilter={props.handleFilter}\n                    nameFilter={props.nameFilter}\n                    handleReset={props.handleReset} />\n                <FilterByGender\n                    handleFilter={props.handleFilter}\n                    genderFilter={props.genderFilter}\n                    handleReset={props.handleReset} />\n                <FilterBySpecie\n                    handleFilter={props.handleFilter}\n                    specieFilter={props.specieFilter}\n                    handleReset={props.handleReset} />\n                <FilterByStatus\n                    handleFilter={props.handleFilter}\n                    status={props.status}\n                    statusFilter={props.statusFilter}\n                    handleReset={props.handleReset} />\n                <FilterSortByName\n                    handleFilter={props.handleFilter}\n                    sortByName={props.sortByName}\n                    handleReset={props.handleReset} />\n\n                <button className=\"resetbtn\" onClick={props.handleReset}>\n                    <i className=\"fas fa-trash-alt\"></i> Clear filters</button>\n            </form>\n\n        </section>\n    );\n};\n\nexport default Filters;\n\nFilters.propTypes = {\n    handleFilter: PropTypes.func,\n    nameFilter: PropTypes.string,\n    specieFilter: PropTypes.string,\n}","export default __webpack_public_path__ + \"static/media/header-rick-square.97057d5f.png\";","import React from \"react\"\nimport logo from \"../images/header-rick-square.png\"\n\nimport { Link } from \"react-router-dom\";\nimport \"../stylesheets/layout/Header.scss\";\n\n\nconst Header = () => {\n    return (\n        <>\n            <header className=\"header\">\n                <div>\n                    <Link to=\"/\" className=\"header__link\">\n                        <img src={logo} alt=\"Rick and Morty tv series logo\"\n                            title=\"Rick and Morty tv series logo\"\n                            className=\"header__image\" />\n                    </Link>\n                </div>\n            </header>\n\n        </>\n    )\n};\n\nexport default Header;","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from 'react-router-dom';\nimport getDataFromApi from \"../services/getDataFromApi.js\";\nimport CharacterList from \"./Characters/CharacterList\";\nimport CharacterDetail from \"../components/./Characters/CharacterDetail\";\nimport CharacterNoResults from './Characters/CharacterNoResults.js';\nimport Filters from \"./Filters/Filters\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Loader from \"./Loader\";\nimport PropTypes from 'prop-types';\n\n\nconst App = () => {\n    const [characters, setCharacters] = useState([]);\n    const [nameFilter, setNameFilter] = useState('');\n    const [genderFilter, setGenderFilter] = useState('All');\n    const [specieFilter, setSpecieFilter] = useState('All');\n    const [statusFilter, setStatusFilter] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [sortByName, setSortByName] = useState(false);\n\n\n    useEffect(() => {\n        getDataFromApi().then(data => setCharacters(data))\n            .then(() => setIsLoading(false));\n    }, []);\n\n\n    //HANDLE FILTERS\n    const handleFilter = data => {\n        console.log(data);\n        if (data.key === 'name') {\n            setNameFilter(data.value);\n        } else if (data.key === 'gender') {\n            setGenderFilter(data.value);\n        } else if (data.key === 'specie') {\n            setSpecieFilter(data.value)\n        } else if (data.key === 'sortByName') {\n            setSortByName(data.checked);\n        } else if (data.key === 'status') {\n            const indexStatus = statusFilter.indexOf(data.value);\n            if (indexStatus === -1) {\n                const newStatusFilter = [...statusFilter, data.value];\n                setStatusFilter(newStatusFilter);\n            } else {\n                const newStatusFilter = [...statusFilter];\n                newStatusFilter.splice(indexStatus, 1);\n                setStatusFilter(newStatusFilter);\n            }\n        }\n    };\n\n    //RESET\n    const handleReset = () => {\n        setNameFilter('');\n        setGenderFilter('All');\n        setSpecieFilter('All');\n        setStatusFilter([]);\n        setSortByName(false);\n    }\n\n    //FILTERS\n    const filteredCharacters = characters\n        .filter(character => {\n            return character.name.toUpperCase().includes(nameFilter.toUpperCase());\n        })\n        .filter(character => {\n            if (genderFilter === 'All') {\n                return true;\n            } else {\n                return character.gender === genderFilter;\n            }\n        })\n        .filter(character => {\n            if (specieFilter === 'All') {\n                return true;\n            } else {\n                return character.species === specieFilter;\n            }\n        })\n        .filter(character => {\n            if (statusFilter.length === 0) {\n                return true;\n            } else {\n                return statusFilter.includes(character.status);\n            }\n        });\n    if (sortByName) {\n        filteredCharacters.sort((a, b) => {\n            if (a.name > b.name) {\n                return 1;\n            }\n            if (a.name < b.name) {\n                return -1;\n            }\n            return filteredCharacters;\n        });\n    };\n\n    const getStatus = (key) => {\n        return [...new Set(characters.map((character) => character[key]))];\n    }\n\n    //RENDER CHARACTER DETAIL\n    const renderCharacterDetail = (props) => {\n        const foundCharacter = characters.find((character) => {\n            return character.id === parseInt(props.match.params.id);\n        });\n        if (foundCharacter !== undefined) {\n            return (\n                <>\n                    <CharacterDetail character={foundCharacter} isLoading={isLoading} />;\n                </>\n            );\n        } else {\n            return <>\n                <Header />\n                <CharacterNoResults />\n            </>\n        }\n    };\n\n    return (\n        <>\n            <div className=\"App\">\n                <Switch>\n                    <Route exact path=\"/\" >\n                        <Header />\n                        <main className=\"main\">\n                            <Filters handleFilter={handleFilter}\n                                handleReset={handleReset}\n                                nameFilter={nameFilter}\n                                genderFilter={genderFilter}\n                                specieFilter={specieFilter}\n                                statusFilter={statusFilter}\n                                sortByName={sortByName}\n                                status={getStatus('status')} />\n                            <CharacterList characters={filteredCharacters} filterName={nameFilter} isLoading={isLoading} />\n                            {isLoading ? <Loader /> : ''}\n                        </main>\n                        <Footer />\n                    </Route>\n                    <Route path=\"/character/:id\" render={renderCharacterDetail} />\n                </Switch>\n            </div>\n        </>\n    );\n};\n\nexport default App;\n\nApp.propTypes = {\n    characters: PropTypes.array,\n    nameFilter: PropTypes.string,\n    specieFilter: PropTypes.string,\n    handleFilter: PropTypes.func,\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './stylesheets/App.scss';\nimport './stylesheets/index.scss';\nimport App from './components/App';\n\n\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}